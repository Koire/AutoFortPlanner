{"version":3,"sources":["index.js"],"names":["docReady","fn","document","readyState","setTimeout","addEventListener","selectedTowers","getElementById","timerSettings","makeAnObserver","element","observer","MutationObserver","contains","disconnect","observe","attributes","childList","characterData","subtree","addATower","clone","content","cloneNode","select","querySelector","M","FormSelect","init","appendChild","timerMins","timerHrs","timerField","time","modifier","label","textContent","e","classList","add","value","target","length","remove","updateTextFields","forEach","researchLevels","researchField","researchName","append","map"],"mappings":"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","file":"AutoFortPlanner.e31bb0bc.js","sourceRoot":"..","sourcesContent":["function docReady(fn) {\n    // see if DOM is already available\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        // call on next available tick\n        setTimeout(fn, 1);\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", fn);\n    }\n}\n// docReady(() => M.AutoInit())\n\n\nconst selectedTowers = document.getElementById(\"selectedTowers\")\nconst timerSettings = document.getElementById(\"timerSettings\")\n\nconst makeAnObserver = (element, fn) => {\n    const observer = new MutationObserver(() => {\n        if(document.contains(element)) {\n            fn()\n            observer.disconnect()\n        }\n    })\n    observer.observe(document, {attributes: false, childList: true, characterData: false, subtree:true});\n    return observer\n}\n\nconst addATower = () => {\n    const clone = document.getElementById(\"towerSelector\").content.cloneNode(true)\n    const select = clone.querySelector(\"select\")\n    makeAnObserver(select, () => M.FormSelect.init(select))\n    clone.querySelector(\"button\").addEventListener(\"click\", () => selectedTowers.appendChild(addATower()))\n    return clone\n}\n\nselectedTowers.appendChild(addATower())\n\nconst timerMins = [1,3,15,30]\nconst timerHrs = [1,3,12,24,48]\n\nconst timerField = (time, modifier) => {\n    const clone = document.getElementById(\"timerSelector\").content.cloneNode(true)\n    const label = clone.querySelector(\"label\")\n    label.textContent = `${time} ${modifier}`\n    clone.querySelector(\"input\").addEventListener('focus', e => label.classList.add(\"active\"))\n    clone.querySelector(\"input\").addEventListener('blur', ({target: {value}}) => {\n        if(value.length == 0){\n            label.classList.remove(\"active\")\n        }\n    })\n    makeAnObserver(label, () =>{\n        M.updateTextFields()\n    })\n\n    return clone\n}\n\n\ntimerMins.forEach(time => {\n    timerSettings.appendChild(timerField(time, \"min\"))\n})\ntimerHrs.forEach(time => {\n    timerSettings.appendChild(timerField(time, \"hr\"))\n})\n\nconst researchLevels = [\"Red\", \"Blue\", \"Orange\", \"Green\", \"Platinum\"]\nconst researchField = researchName => {\n    const clone = document.getElementById(\"researchSelection\").content.cloneNode(true)\n    clone.querySelector(\"span\").textContent = researchName\n    clone.querySelector(\"input\").value = researchName\n    return clone\n}\ndocument.getElementById(\"researchLevels\").append(\n    ...researchLevels.map(researchField)\n)\n"]}